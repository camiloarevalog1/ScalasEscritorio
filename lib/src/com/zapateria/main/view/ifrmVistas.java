/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zapateria.main.view;

import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diego
 */
public class ifrmVistas extends MarcoInternoPersonalizado {

    private static final long serialVersionUID = -815473442999824489L;

    private DefaultTableModel dtblmVistas;

    /**
     * Creates new form ifrmPermisos
     */
    public ifrmVistas() {
        initComponents();
    }

    private void llenarTablaVistas() {

        final String[] camposPermisos = {"Id", "Ventana"};

        // Configurando los eventos de edicion de la tabla
        dtblmVistas = new DefaultTableModel(null, camposPermisos) {
            private static final long serialVersionUID = -4082996669139353200L;

            @Override
            public boolean isCellEditable(int row, int column) {
                return column > 0;
            }
        };
        // Llenando la tabla permisos
        servicio.listarVistas().forEach((vista) -> {
            dtblmVistas.addRow(vista.toArray());
        });
        //Agregando el modelo de la tabla usuarios
        tblVistas.setModel(dtblmVistas);

        dtblmVistas.addTableModelListener((TableModelEvent e) -> {

            //Obteniendo el objeto almacenado en la celda seleccionada
            if (e.getType() == TableModelEvent.UPDATE) {
                // Capturando los datos que contiene las celdas a editar.

                long id = 0;
                String vista = "";

                Object idObject = tblVistas.getValueAt(e.getFirstRow(), 0);
                Object vistaObject = tblVistas.getValueAt(e.getFirstRow(), 1);

                if (vistaObject == null) {
                    return;
                }

                vista = String.valueOf(vistaObject);

                if (idObject == null) {
                    // Registrando vista
                    if (servicio.registrarVista(vista)) {
                        actualizarTablaVistas();
                        mostrarMensaje("Vista registrada satisfactoriamente.");
                    } else {
                        mostrarMensaje("No se pudo registrar la vista.");
                    }

                } else {
                    // Edintando vista
                    id = Long.parseLong(String.valueOf(idObject));
                    if (servicio.editarVista(id, vista)) {
                        actualizarTablaVistas();
                        mostrarMensaje("Vista editada satisfactoriamente.");
                    } else {
                        mostrarMensaje("No se pudo editar la vista.");
                    }
                }

            }
        });

        aplicarEventosPersonalizados(tblVistas);
    }

    private void actualizarTablaVistas() {
        tblVistas.removeAll();
        dtblmVistas = null;
        llenarTablaVistas();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelVistas = new javax.swing.JPanel();
        spVistas = new javax.swing.JScrollPane();
        tblVistas = new TablaPersonalizada();
        brnEliminar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Administrar ventanas y pestañas");
        setMaximumSize(new java.awt.Dimension(400, 317));
        setMinimumSize(new java.awt.Dimension(400, 317));
        setPreferredSize(new java.awt.Dimension(400, 317));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        panelVistas.setBorder(javax.swing.BorderFactory.createTitledBorder("Ventanas y pestañas"));

        tblVistas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        spVistas.setViewportView(tblVistas);

        javax.swing.GroupLayout panelVistasLayout = new javax.swing.GroupLayout(panelVistas);
        panelVistas.setLayout(panelVistasLayout);
        panelVistasLayout.setHorizontalGroup(
            panelVistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spVistas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
        );
        panelVistasLayout.setVerticalGroup(
            panelVistasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelVistasLayout.createSequentialGroup()
                .addComponent(spVistas, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );

        brnEliminar.setText("Eliminar");
        brnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                brnEliminarActionPerformed(evt);
            }
        });

        btnCerrar.setText("Cerrar");
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnNuevo.setText("Nuevo");
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelVistas, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 52, Short.MAX_VALUE)
                        .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(brnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelVistas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCerrar)
                    .addComponent(brnEliminar)
                    .addComponent(btnNuevo))
                .addGap(10, 10, 10))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        llenarTablaVistas();

    }//GEN-LAST:event_formInternalFrameOpened

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        cerrar();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        dtblmVistas.addRow(new Object[]{});
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void brnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_brnEliminarActionPerformed
        int filaSeleccionada = tblVistas.getSelectedRow();

        if (filaSeleccionada < 0) {
            mostrarMensaje("Seleccione un rol de la fila");
            return;
        }

        Object idObject = tblVistas.getValueAt(filaSeleccionada, 0);

        if (idObject == null) {
            dtblmVistas.removeRow(filaSeleccionada);
            return;
        }

        long id = Long.parseLong(String.valueOf(idObject));
        String rol = String.valueOf(tblVistas.getValueAt(filaSeleccionada, 1));

        if (mostrarDecision("¿Desea eliminar el rol " + rol + "?")) {

            if (servicio.eliminarVista(id)) {
                actualizarTablaVistas();
                mostrarMensaje("Rol eliminado");
            } else {
                mostrarMensaje("No se pudo eliminar el rol");
            }

        }

    }//GEN-LAST:event_brnEliminarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton brnEliminar;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JPanel panelVistas;
    private javax.swing.JScrollPane spVistas;
    private javax.swing.JTable tblVistas;
    // End of variables declaration//GEN-END:variables
}
