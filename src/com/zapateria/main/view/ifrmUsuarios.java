/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zapateria.main.view;

import com.zapateria.main.dto.RolDTO;
import com.zapateria.main.dto.UsuarioDTO;
import javax.swing.JDesktopPane;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Usuario
 */
public class ifrmUsuarios extends MarcoInternoPersonalizado {

    private static final long serialVersionUID = 5802524775132917790L;

    private JDesktopPane escritorio;

    // Definiendo las columnas de la tabla con sus respectivos nombres.
    private final static String[] NOMBRES_COLUMNAS = {"Codigo Empleado", "Nombres", "Apellidos", "Documento", "Nombre usuario", "Rol","telefono","Direccion"};
    private DefaultTableModel dtblmUsuarios;

    /**
     * Creates new form Usuarios
     */
    public ifrmUsuarios() {
        initComponents();
    }

    
    public void actualizarTablaUsuarios() {
        tblUsuarios.removeAll();
        dtblmUsuarios = null;
        llenarTablaUsuarios();

    }

    private void llenarTablaUsuarios() {

        // Configurando los eventos de edicion de la tabla
        dtblmUsuarios = new DefaultTableModel(null, NOMBRES_COLUMNAS) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return column > 0;
            }
        };
        
        // Llenando la tabla usuarios
        servicio.listarUsuarios()
                .forEach((UsuarioDTO usuario) -> {
                    dtblmUsuarios.addRow(usuario.toArray());
                    
                });
        //Agregando el modelo de la tabla usuarios
        tblUsuarios.setModel(dtblmUsuarios);

        dtblmUsuarios.addTableModelListener(
                (TableModelEvent e) -> {

                    //Obteniendo el objeto almacenado en la celda seleccionada
                    if (e.getType() == TableModelEvent.UPDATE) {

                        /*
                         * Indexado de columnas y sus campos en la base de datos
                         * 0 - ID, 1 - NOMBRES, 2 - APELLIDOS, 3 - DOCUMENTO, 4
                         * - NOMBRE_USUARIO, 5 - ROL
                         */
                        // Capturando los datos que contiene las celdas a editar.
                        long id = Long.parseLong(String.valueOf(tblUsuarios.getValueAt(e.getFirstRow(), 0)));
                        String nombres = String.valueOf(tblUsuarios.getValueAt(e.getFirstRow(), 1));
                        String apellidos = String.valueOf(tblUsuarios.getValueAt(e.getFirstRow(), 2));
                        String documento = String.valueOf(tblUsuarios.getValueAt(e.getFirstRow(), 3));
                        String nombreUsuario = String.valueOf(tblUsuarios.getValueAt(e.getFirstRow(), 4));
                        String tele = String.valueOf(tblUsuarios.getValueAt(e.getFirstRow(), 6));
                        String dir = String.valueOf(tblUsuarios.getValueAt(e.getFirstRow(), 7));

                      

                        RolDTO rolDTO = (RolDTO) tblUsuarios.getValueAt(e.getFirstRow(), 5);

                        long rol = rolDTO.getId();

                        if (servicio.editarUsuario(id, nombres, apellidos, documento, nombreUsuario, rol,tele,dir)) {
                            actualizarTablaUsuarios();
                            mostrarMensaje("Los datos del usaurio fueron editados satisfactoriamente.");
                        } else {
                            mostrarMensaje("No se pudo actualizar los datos solicitados.");
                        }

                    }
                }
        );

        agregarJComboBoxAColumna(tblUsuarios, 5, servicio.listarRoles().toArray());

        aplicarEventosPersonalizados(tblUsuarios);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLayeredPane1 = new javax.swing.JLayeredPane();
        spUsuarios = new javax.swing.JScrollPane();
        tblUsuarios = new TablaPersonalizada();
        btnCerrar = new javax.swing.JButton();
        btnRegistrarNuevo = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnCambiarContrasena = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Administrar usuarios");
        setBackground(new java.awt.Color(255, 255, 255));
        setDoubleBuffered(true);
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/com/zapateria/main/images/icon2.png"))); // NOI18N
        setOpaque(true);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        jLayeredPane1.setBorder(javax.swing.BorderFactory.createTitledBorder("Usuarios almacenados"));

        tblUsuarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        spUsuarios.setViewportView(tblUsuarios);

        jLayeredPane1.setLayer(spUsuarios, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spUsuarios, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
        );

        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/zapateria/main/images/SALIR.png"))); // NOI18N
        btnCerrar.setPreferredSize(new java.awt.Dimension(100, 23));
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnRegistrarNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/zapateria/main/images/agregarCli.png"))); // NOI18N
        btnRegistrarNuevo.setPreferredSize(new java.awt.Dimension(100, 23));
        btnRegistrarNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarNuevoActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/zapateria/main/images/eliminarCli.png"))); // NOI18N
        btnEliminar.setPreferredSize(new java.awt.Dimension(100, 23));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCambiarContrasena.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/zapateria/main/images/bloggif_5a0b5a6596c52.png"))); // NOI18N
        btnCambiarContrasena.setPreferredSize(new java.awt.Dimension(100, 23));
        btnCambiarContrasena.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarContrasenaActionPerformed(evt);
            }
        });

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/zapateria/main/images/Actualizar_opt.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLayeredPane1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(98, 98, 98)
                        .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(btnRegistrarNuevo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCambiarContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLayeredPane1)
                .addGap(44, 44, 44))
            .addGroup(layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addComponent(btnRegistrarNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnCambiarContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        cerrar();
    }//GEN-LAST:event_btnCerrarActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        llenarTablaUsuarios();
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        // Eliminando usuario

        int filaSeleccionada = tblUsuarios.getSelectedRow();

        if (filaSeleccionada < 0) {
            mostrarMensaje("Seleccione un usuario");
            return;
        }

        Object idObject = tblUsuarios.getValueAt(filaSeleccionada, 0);

        if (idObject == null) {
            dtblmUsuarios.removeRow(filaSeleccionada);
            return;
        }

        //Obteniendo el ID del usuario a eliminar
        long idusuarioSeleccionado = Long.parseLong(String.valueOf(idObject));
        String nombre = String.valueOf(tblUsuarios.getValueAt(filaSeleccionada, 1));

        if (mostrarDecision("¿Desea eliminar al usuario " + nombre + "?")) {
            if (servicio.eliminarUsuario(idusuarioSeleccionado)) {
                servicio.BorrarAbono_Prestamo(idusuarioSeleccionado);
                servicio.BorrarNominas(idusuarioSeleccionado);
                servicio.BorrarLiquidaciones(idusuarioSeleccionado);
                actualizarTablaUsuarios();
                
                mostrarMensaje("Usuario eliminado satisfactoriamente");
            } else {
                mostrarMensaje("Error al eliminar al usuario");
            }

        }

    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnRegistrarNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarNuevoActionPerformed
        // Mostrando formulario ifrmRegistrarUsuario

        escritorio = getDesktopPane();
        ifrmRegistrarUsuario registrarUsuario = new ifrmRegistrarUsuario(this);
        escritorio.add(registrarUsuario);
        registrarUsuario.setVisible(true);

        registrarUsuario.setSize(500, 360);
    }//GEN-LAST:event_btnRegistrarNuevoActionPerformed

    private void btnCambiarContrasenaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarContrasenaActionPerformed
        // Mosrando formulario ifrmCambiarContrasena
        int filaSeleccionada = tblUsuarios.getSelectedRow();

        if (filaSeleccionada < 0) {
            mostrarMensaje("Seleccione un usuario");
            return;
        }

        Object idObject = tblUsuarios.getValueAt(filaSeleccionada, 0);

        long id = Long.parseLong(String.valueOf(idObject));

        escritorio = getDesktopPane();
        ifrmCambiarContrasena cambiarContrasena = new ifrmCambiarContrasena(id);
        escritorio.add(cambiarContrasena);
        cambiarContrasena.setVisible(true);
        cambiarContrasena.setSize(392, 139);
    }//GEN-LAST:event_btnCambiarContrasenaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        actualizarTablaUsuarios();
    }//GEN-LAST:event_jButton1ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCambiarContrasena;
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnRegistrarNuevo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JScrollPane spUsuarios;
    javax.swing.JTable tblUsuarios;
    // End of variables declaration//GEN-END:variables
}
