/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.zapateria.main.view;

import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Diego
 */
public class ifrmRoles extends MarcoInternoPersonalizado {

    private static final long serialVersionUID = 1893396551883216616L;

    private DefaultTableModel dtblmRoles;

    /**
     * Creates new form ifrmPermisos
     */
    public ifrmRoles() {
        initComponents();
        System.out.println("Ingreso Roles");
    }
    

    private void llenarTablaRoles() {

        final String[] camposRoles = {"Codigo Rol", "Rol", "Valor"};
        System.out.println("11111");
        // Configurando los eventos de edicion de la tabla
        dtblmRoles = new DefaultTableModel(null, camposRoles) {
            private static final long serialVersionUID = -4082996669139353200L;

            @Override
            public boolean isCellEditable(int row, int column) {
                System.out.println("222222");
                return column > 0; // Haciendo editable a todas las columnas menos la primera
            }
        };
        // Llenando la tabla roles
        servicio.listarRoles().forEach((rol) -> {
            dtblmRoles.addRow(rol.toArray());
        });
        //Agregando el modelo de la tabla roles
        tblRoles.setModel(dtblmRoles);

        dtblmRoles.addTableModelListener((TableModelEvent e) -> {

            //Obteniendo el objeto almacenado en la celda seleccionada
            if (e.getType() == TableModelEvent.UPDATE) {
                // Capturando los datos que contiene las celdas a editar.

                long id = 0;
                String rol = "";
                String valor = "";
                double val = 0.0;

                Object idObject = tblRoles.getValueAt(e.getFirstRow(), 0);
                Object rolObject = tblRoles.getValueAt(e.getFirstRow(), 1);
                Object valorObject = tblRoles.getValueAt(e.getFirstRow(), 2);

                if (rolObject == null) {
                    return;
                }

                rol = String.valueOf(rolObject);
                valor = String.valueOf(valorObject);

                

                if (idObject == null) {
                    // Registrando rol
                    if (servicio.registrarRol(rol, val)) {
                        actualizarTablaRoles();

                        mostrarMensaje("Rol registrado satisfactoriamente.");
                    } else {
                        mostrarMensaje("No se pudo registrar el rol.");
                    }

                } else {
                    // Edintando rol
                    id = Integer.valueOf(String.valueOf(idObject));
                    val = Double.parseDouble(valor);
                    if (servicio.editarRol(id, rol, val)) {
                        actualizarTablaRoles();
                        mostrarMensaje("Rol editado satisfactoriamente.");
                    } else {
                        mostrarMensaje("No se pudo editar el rol.");
                    }
                }

            }
        });

        aplicarEventosPersonalizados(tblRoles);
    }

    public static Double convertToDouble(Object o) {
        String stringToConvert = String.valueOf(o);
        Double convertedInt = Double.parseDouble(stringToConvert);
        return convertedInt;
    }

    private void actualizarTablaRoles() {
        tblRoles.removeAll();
        dtblmRoles = null;
        llenarTablaRoles();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelRoles = new javax.swing.JPanel();
        scrollRoles = new javax.swing.JScrollPane();
        tblRoles = new TablaPersonalizada();
        btnEliminar = new javax.swing.JButton();
        btnCerrar = new javax.swing.JButton();
        btnNuevo = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("Administrar roles");
        setBackground(new java.awt.Color(255, 255, 255));
        setFrameIcon(new javax.swing.ImageIcon(getClass().getResource("/com/zapateria/main/images/icon2.png"))); // NOI18N
        setMaximumSize(new java.awt.Dimension(400, 317));
        setMinimumSize(new java.awt.Dimension(400, 317));
        setName(""); // NOI18N
        setPreferredSize(new java.awt.Dimension(400, 317));
        setToolTipText("");
        setVisible(false);
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        panelRoles.setBorder(javax.swing.BorderFactory.createTitledBorder("Roles"));
        panelRoles.setPreferredSize(new java.awt.Dimension(247, 221));

        tblRoles.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        scrollRoles.setViewportView(tblRoles);

        javax.swing.GroupLayout panelRolesLayout = new javax.swing.GroupLayout(panelRoles);
        panelRoles.setLayout(panelRolesLayout);
        panelRolesLayout.setHorizontalGroup(
            panelRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRolesLayout.createSequentialGroup()
                .addComponent(scrollRoles, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        panelRolesLayout.setVerticalGroup(
            panelRolesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelRolesLayout.createSequentialGroup()
                .addComponent(scrollRoles, javax.swing.GroupLayout.DEFAULT_SIZE, 336, Short.MAX_VALUE)
                .addContainerGap())
        );

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/zapateria/main/images/Eliminar.png"))); // NOI18N
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnCerrar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/zapateria/main/images/SALIR.png"))); // NOI18N
        btnCerrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarActionPerformed(evt);
            }
        });

        btnNuevo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/zapateria/main/images/agregar.png"))); // NOI18N
        btnNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnNuevo, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(74, 74, 74)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(btnCerrar)
                .addGap(28, 28, 28))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelRoles, javax.swing.GroupLayout.DEFAULT_SIZE, 423, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelRoles, javax.swing.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnCerrar, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnNuevo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
       llenarTablaRoles();
    }//GEN-LAST:event_formInternalFrameOpened

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        int filaSeleccionada = tblRoles.getSelectedRow();

        if (filaSeleccionada < 0) {
            mostrarMensaje("Seleccione un rol de la fila");
            return;
        }

        Object idObject = tblRoles.getValueAt(filaSeleccionada, 0);

        if (idObject == null) {
            dtblmRoles.removeRow(filaSeleccionada);
            return;
        }

        long id = Integer.valueOf(String.valueOf(idObject));
        String rol = String.valueOf(tblRoles.getValueAt(filaSeleccionada, 1));

        if (mostrarDecision("¿Desea eliminar el rol " + rol + "?")) {

            if (servicio.eliminarRol(id)) {
                actualizarTablaRoles();
                mostrarMensaje("Rol eliminado");
            } else {
                mostrarMensaje("No se pudo eliminar el rol");
            }

        }


    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevoActionPerformed
        dtblmRoles.addRow(new Object[]{});
    }//GEN-LAST:event_btnNuevoActionPerformed

    private void btnCerrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarActionPerformed
        cerrar();
    }//GEN-LAST:event_btnCerrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCerrar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnNuevo;
    private javax.swing.JPanel panelRoles;
    private javax.swing.JScrollPane scrollRoles;
    private javax.swing.JTable tblRoles;
    // End of variables declaration//GEN-END:variables
}
